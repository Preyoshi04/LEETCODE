class Solution {
    public int peopleAwareOfSecret(int n, int delay, int forget) {
        int MOD = 1000000007;     //given in statement for large values
        int[] resultArr = new int[n+1];       //since days are strating from 1, so we take (n+1) as size

        resultArr[1]=1;   //one day 1, one person knows secret

        for(int d=1;d<=n;d++)     //looping through to calculate shareday and count of final people
        {
            //finding the sharedays of peoples
            //a person will start sharing from (day of knowing+delay)
            //that person will stop sharing (or will remember) till  day of knowing + forget -1
            //if value of forget-1  is greater than n, so we wraps up using Math.min
            for(int shareD=(d+delay);shareD <= Math.min(d+(forget-1),n);shareD++)
            {
                resultArr[shareD] = (resultArr[d]+resultArr[shareD]) % MOD;
            }
        }
        //counting the final people who remembers
            int finalCount=0;
            //only people who get to know after n-forget+1 days, will rememebrs
            for(int rememD=n-forget+1;rememD<=n;rememD++)
            {
                finalCount=(finalCount+resultArr[rememD]) % MOD;
            }
        return finalCount;
    }
}
