class Solution {
    public int findMin(int[] nums) {
        int start = 0, end = nums.length - 1;
        int ans = Integer.MAX_VALUE;

        while (start <=  end) {
            int mid = start + (end - start) / 2;
            if (nums[start] <= nums[mid]) //left hand sorted
            {
                ans = Math.min(nums[start], ans); //if left hand is sorted, min elemnt mayb the first one, or may be in the right side
                start = mid + 1;
            } else //right hand sorted
            {
                ans = Math.min(nums[mid], ans); //if right hand is sorted, minimum elment mayb the mid elemnet or in the left side
                end = mid - 1;
            }
        }
        return ans;
    }
}
